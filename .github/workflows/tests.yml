name: Run Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: Run the build with tmate debugging enabled
        required: false
        default: false
  schedule:
    - cron: '0 0 * * 6'

jobs:
  pytest:
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        os: [ ubuntu-18.04, macos-latest ]
        python-version: [ 3.9, 3.8, 3.7 ]

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Log Conda Environment
        run: |
          conda info
          conda list

      - name: Install Dependencies
        run: |
          conda install pytest pytest-cov

      - name: Install libglu1-mesa
        if: matrix.os == 'ubuntu-18.04'
        run: sudo apt-get install -y libglu1-mesa

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
        with:
          limit-access-to-actor: true

      - name: Run Tests
        # I have no idea why running this test first is needed, something about memory (PR #1)
        run: |
          pytest -k test_io.py
          pytest --cov=./ --cov-report=xml

      - name: Store Coverage Report
        uses: actions/upload-artifact@v2
        with:
          name: coverage_report
          path: ./coverage.xml

      - name: Build docs
        if: matrix.os == 'ubuntu-18.04' && matrix.python-version == 3.8
        run: |
          make -C docs buildapi SPHINXOPTS="-W"
          make -C docs html SPHINXOPTS="-W"

  upload-to-codecov:
    needs: pytest
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          verbose: true
          fail_ci_if_error: true